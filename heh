
prog ->
	'func' FUNC_ID '(' func_params ')' return_def '{' statement_list '}' prog
	| statement prog
	| .

return_def-> '->' TYPE | .
func_params-> PARAM_OUT_ID PARAM_IN_ID ':' TYPE func_params_n | .
func_params_n -> 
	',' PARAM_OUT_ID PARAM_IN_ID ':' TYPE func_params_n
	| .

statement_list -> statement statement_list | .

statement ->
	'if (' expr ') {' statement_list '} else {' statement_list '}'
	| 'while (' expr ') {' statement_list '}'
	| 'break'
	| 'continue'
	| 'return' return_t
	| FUNC_ID '(' call_params ')'
	| VAR_DEFINITION_KW IDENTIFIER var_definition_value .

return_t -> expr | .

var_definition_value -> '=' value | .

value -> term | FUNC_ID '(' call_params ')' .

call_params -> call_param_kw term call_param_n | .
call_param_n -> call_param_kw term call_param_n | .
call_param_kw -> PARAM_OUT_ID ':' | .

VAR_DEFINITION_KW -> 'var' | 'let' .

TYPE -> 'Int' | 'Double' | 'String' .