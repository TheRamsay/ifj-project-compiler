prog -> func_def prog | statement prog | .

func_def -> 'func' FUNC_ID '(' func_params ')' return_def '{' statement_list '}' .
return_def-> '->' TYPE | .
func_params -> PARAM_OUT_ID PARAM_IN_ID ':' TYPE func_params_n | .
func_params_n -> 
	',' PARAM_OUT_ID PARAM_IN_ID ':' TYPE func_params_n
	| .

statement_list -> statement statement_list | .

statement -> 
	  if_statement	
	| while_statement
	| 'break'
	| 'continue'
	| 'return' return_t
	| func_call
	| assignment
	| var_definition IDENTIFIER var_definition_value
	| expression .


if_statement -> 'if' expr '{' statement_list '} else {' statement_list '}' .
while_statement -> 'while' expr '{' statement_list '}' .
func_call -> FUNC_ID '(' call_params ')' .
var_definition -> VAR_DEFINITION_KW var_definition_type . 
var_definition_type -> ':' TYPE | .
assignment -> IDENTIFIER var_definition_value .

return_t -> expr | .

var_definition_value -> '=' value | .

value -> term | FUNC_ID '(' call_params ')' .

call_params -> call_param_kw term call_param_n | .
call_param_n -> ',' call_param_kw term call_param_n | .
call_param_kw -> PARAM_OUT_ID ':' | .

VAR_DEFINITION_KW -> 'var' | 'let' .

TYPE -> 'Int' nullable | 'Double' nullable | 'String' nullable .
nullable -> '?' | .